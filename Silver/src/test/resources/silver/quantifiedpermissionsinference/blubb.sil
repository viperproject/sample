field f: Ref

function get_f(x: Ref): Ref
requires acc(x.f)
ensures acc(x.f)
ensures result == x.f


function max(x: Perm, y: Perm): Perm
{
  (x > y ? x : y)
}

method basic(x: Ref, y: Ref, rdAmount: Perm)
  requires none < rdAmount && rdAmount < write
  requires (forall r: Ref :: acc(r.f, max(max((r == x ? write : none), (r == (y == x || perm(y.f) == none ? y : y.f) ? write : none)), (r == y ? rdAmount : none))))
{
  x.f := y
  y.f.f := x
}