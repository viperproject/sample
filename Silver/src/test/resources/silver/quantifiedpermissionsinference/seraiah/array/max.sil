method max_array(arr: Array, lenA:Int) returns (x: Int)
{
  if (lenA <= 0) {
    x := (-1)
  } else {
    var y: Int
    x := 0;
    y := lenA - 1;

    while (x != y)
    {
      if (loc(arr, x).val <= loc(arr, y).val) {
        x := x + 1
      } else {
        y := y - 1
      }
    }
  }
}

/* Encoding of arrays */

field val: Int

domain Array {
  function loc(a: Array, i: Int): Ref
  function len(a: Array): Int
  function first(r: Ref): Array
  function second(r: Ref): Int

  axiom all_diff {
    forall a: Array, i: Int :: {loc(a, i)}
      first(loc(a, i)) == a && second(loc(a, i)) == i
  }

  axiom length_nonneg {
    forall a: Array :: len(a) >= 0
  }
}