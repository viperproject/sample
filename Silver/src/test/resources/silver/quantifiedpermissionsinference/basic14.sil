method basic(arr: Array, r: Ref)
{
    var i: Int := 0
    while (i + 1 < 10 && r.val + 10 < 5) {
        i := i + 2
        r.next := r.next.next
    }
}

field val: Int
field next: Ref

domain Array {
	function loc(a: Array, i: Int): Ref
	function length(a: Array): Int
	function ref_to_array(ref: Ref): Array
	function ref_to_index(ref: Ref): Int

	axiom all_diff {
		forall a: Array, i: Int :: {loc(a, i)} ref_to_array(loc(a, i)) == a && ref_to_index(loc(a, i)) == i
	}
	axiom length_nonneg {
		forall a:Array :: length(a) >= 0
	}
}