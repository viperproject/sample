field val: Int

domain Matrix
{
    function loc(m: Matrix, i: Int, j: Int): Ref
    function width(m: Matrix): Int
    function height(m: Matrix): Int

    axiom axiom_width { forall m: Matrix :: 0 <= width(m) }
    axiom axiom_height { forall m: Matrix :: 0 <= height(m) }
}

method init_2darray(m: Matrix, a: Int, b: Int)
{
    var i: Int
    var j: Int
    var w: Int
    var h: Int

    w := width(m)
    h := height(m)

    i := 0
    while (i < h)
    {
        j := 0
        while (j < w)
        {
            loc(m, i, j).val := 0
            j := j + 1
        }
        i := i + 1
    }

    if (0 <= a && a < h && 0 <= b && b < w) {
        assert loc(m, a, b).val == 0
    }
}