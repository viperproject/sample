field val: Int

domain Array
{
    function loc(a: Array, i: Int): Ref
    function length(a: Array): Int
    function get_index(r: Ref): Int
    function get_array(r: Ref): Array

    axiom axiom_array { forall a: Array, i: Int :: get_array(loc(a, i)) == a }
    axiom axiom_index { forall a: Array, i: Int :: get_index(loc(a, i)) == i }
    axiom axiom_length { forall a: Array :: 0 <= length(a) }
}

method find(a: Array, v: Int)
{
    var i: Int
    var l: Int
    var p: Int

    i := 0
    l := length(a)
    p := -1

    while (i < l && p == -1)
    {
        if (loc(a, i).val == v) {
            p := i
        }
        i := i + 1
    }

    if (p != -1) {
        assert loc(a, p).val == v
    }
}