// There seems to be a bug in the heap analysis causes the analysis
// to terminate before the fixed point is reached
//:: IgnoreFile(/sample/issue/999/)

var next: Ref
var val: Int

/** Returns true if the given value `key` occurs in the given linked list. */
method find(list: Ref, key: Int) returns (cur: Ref)
{
    cur := list
    while (cur != null && cur.val != key) {
        cur := cur.next
    }
}

/** Tests that the inferred precondition of `containsVal` is not too strong. */
method test(list: Ref) requires acc(valid(list), write) {
    var res: Ref
    res := find(list, 1) // Would always return true
}

/** Predicate that the specification extraction should detect and reuse. */
predicate valid(this: Ref) {
  acc(this.val, write) && acc(this.next, write) &&
  ((this.next != null) ==> acc(valid(this.next), write))
}